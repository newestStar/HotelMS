NOTES

// booking has info of reservation and customer (via customer id)
// reservation is a booking so it extends booking class
// this means when you delete a booking (main class) you are also deleting a reservation (sub class) or vise versa

// therefore, Reservation extends Booking
// and ReservationDAO extends BookingDAO or 
// when you insert a reservation need customer id

$r = new Reservation();
$r->setCid(1);
$r->setStatus("pending");
// and all reservation information

$b = new Booking(); // do we even need booking object? reservation already extends it

// this protects direct database access 
// insert here is protected 
$brh = new BookingReservationHandler($b, $r);
$brh->create();
class BookingReservationHandler extends BookingReservationDAO
public function create()
{
	$dao = new BookingReservationDAO();
	$dao->insert($this->booking, $this->reservation);

}
protected function insert(Booking $b, Reservation $r)

CREATE TABLE `items` (
  `id` int(10) UNSIGNED NOT NULL,
  `model` varchar(32) NOT NULL,
  `category` varchar(20) NOT NULL,
  `brand` varchar(100) NOT NULL,
  `price` float(10,2) NOT NULL,
  `isDeleted` tinyint(1) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `computers` (
  `item_id` int(10) UNSIGNED NOT NULL,
  `processor_type` varchar(100) NOT NULL,
  `ram_size` int(10) UNSIGNED NOT NULL,
  `cpu_cores` int(10) UNSIGNED NOT NULL,
  `weight` float(10,2) NOT NULL,
  `hdd_size` int(10) UNSIGNED NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE `computers`
  ADD PRIMARY KEY (`item_id`),
  ADD UNIQUE KEY `id_UNIQUE` (`item_id`);
  
  --
ALTER TABLE `items`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `id_UNIQUE` (`id`),
  ADD UNIQUE KEY `model_UNIQUE` (`model`);
  
-- Contraintes pour la table `computers`
--
ALTER TABLE `computers`
  ADD CONSTRAINT `fk_computer_item_id` FOREIGN KEY (`item_id`) REFERENCES `items` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION;

--

  
  
  
  
  
  
  
  
  